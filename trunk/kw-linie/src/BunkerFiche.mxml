<?xml version="1.0" encoding="utf-8"?>
<mx:Application 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	layout="absolute"
	creationComplete="creationComplete();"
	backgroundColor="#637449" 
	themeColor="#637449" 
	backgroundGradientColors="[#637449,#637449]" 
	xmlns:local="*"
	xmlns:bunkerFiche="bunkerFiche.*">

	<mx:Script>
		<![CDATA[
			import util.Async;
			import mx.events.CloseEvent;
			import bunkerFiche.Documenten;
			import util.BindingUtils;
			import mx.controls.ComboBox;
			import mx.collections.ArrayCollection;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			import mx.controls.Alert;
			
			[Bindable]
			public var _bunker: Object;
			
			[Bindable]
			public var fltr: Object = new Object();
			
			private var filterFields: ArrayCollection = new ArrayCollection();

			public function registerFilterField(filterField: Object) : void {
				if (!filterFields.contains(filterField)) {
					filterFields.addItem(filterField);
				}
			}
			
			public function clearfilter() : void {
				for each (var filterField:Object in filterFields) {
					filterField.text = "";
				}
				for (var ff: String in fltr) {
					fltr[ff] = "";
				}
				bunkers.refresh();
			}
			
			public var timer: Timer;
			
			private function creationComplete() : void {
				joomlaUser.send();
				refreshBunkerGrid();
				
				timer_security(null);
				
				timer = new Timer(1000 * 60);
				timer.addEventListener(TimerEvent.TIMER, timer_security);
				timer.start();
			}
			
			private function timer_security(event: TimerEvent) : void {
				trace("timer_security " + event);
				Async.call(joomlaUser.send(), result_joomlaUser);
			}
			
			private function result_joomlaUser(event : ResultEvent) : void {
				trace(event + " OK " + event.result);
			}
			
			private function fault_joomlaUser(event : FaultEvent) : void {
				trace(event + " FAULT " + event.fault);
			}
			
			private function refreshBunkerGrid() : void {
				bunkerService.findAll();
			}
			
			private function onFault(event: FaultEvent) : void {
				Alert.show(event.message.toString());
			}
			
			private function click_bewaar(event: Event) : void {
				bunkerService.save(bind());
			}
			
			private function result_save(event: ResultEvent) : void {
				//refreshBunkerGrid();
				var b: Object = event.result;
				for (var i: int=0; i<bunkers.length; i++) {
					if (bunkers.getItemAt(i).bunker_id == b.bunker_id) {
						bunkers.setItemAt(b, i);
						break;
					}
				}
				
				bunkerGrid.selectedItem = b;
				bunkerGrid.scrollToIndex(bunkerGrid.selectedIndex);
			}
			
			private function bunkerGridChange(event: Event) : void {
				if (bunkerGrid.selectedItem != null) {
					bunkerService.findByID(bunkerGrid.selectedItem.bunker_id);
				}
			}
			
			public function bind() : Object {
				var bunker : Object = new Object();
				
				type.bind(bunker);
				locatie.bind(bunker);
				documenten.bind(bunker);
				bescherming.bind(bunker);
				opmerkingen.bind(bunker);
				links.bind(bunker);
				contacten.bind(bunker);
				fotos.bind(bunker);
				
				return bunker;
			}
			
			private function click_voeg_toe(event: Event) : void {
				clearfilter();
				bunkerService.create();
			}
			
			private function result_create(event: ResultEvent) : void {
				var newBunker: Object = new Object();
				newBunker.bunker_id = event.result;
				bunkers.addItem(newBunker);
				bunkerGrid.selectedItem = newBunker;
				bunkerGrid.scrollToIndex(bunkerGrid.selectedIndex);
			}

			private function result_remove(event: ResultEvent) : void {
				refreshBunkerGrid();
			}

			private function close_verwijder_alert(event: CloseEvent) : void {
				if (event.detail==Alert.YES) {
					bunkerService.remove(bunkerGrid.selectedItem.bunker_id);
    			}
			}
			
			private function click_verwijder(event: Event) : void {
				Alert.yesLabel = "Ja";
				Alert.noLabel = "Nee";
				Alert.show(
					"Ben je zeker dat je de bunker wil verwijderen?",
					"Verwijderen",
					Alert.YES | Alert.NO,
					null,
					close_verwijder_alert);
			}
			
			private function result_findByID(event: ResultEvent) : void {
				_bunker = event.result;
			}
			
			public function filter(fieldname: String, fieldvalue: String) : void {
				//Alert.show("filter " + fieldname + " = " + fieldvalue);
				fltr[fieldname] = fieldvalue;
				bunkers.refresh();
			}
			
			public function filterBunkers(item: Object) : Boolean {
				for (var fieldname:String in fltr) {
					var needle: String = fltr[fieldname];
					if (needle != null && needle.length > 0) {
						var v: String = "" + item[fieldname];
						if (v.toLowerCase().indexOf(needle.toLowerCase()) < 0) {
							return false;
						}
					}
				}  
				return true;
			}

		]]>
	</mx:Script>
	
	<mx:Model id="user">{joomlaUser.lastResult}</mx:Model>
	
	<mx:ArrayCollection 
		id="bunkers"
		filterFunction="filterBunkers" 
		source="{bunkerService.findAll.lastResult}"/>
	
	<mx:HTTPService 
		id="joomlaUser" 
		url="joomla-user.php" 
		method="GET" 
		resultFormat="e4x"
		result="null"
		fault="fault_joomlaUser(event)" />
	
	<mx:RemoteObject id="bunkerService"
		source="kwl.BunkerService" 
		destination="amfphp"
		fault="onFault(event)">
		<mx:method name="save" result="result_save(event)" />
		<mx:method name="create" result="result_create(event)" />
		<mx:method name="remove" result="result_remove(event)" />
		<mx:method name="findByID" result="result_findByID(event)" />
    </mx:RemoteObject>
	
	<mx:VBox width="718">
		
		<mx:DataGrid id="bunkerGrid"
			dataProvider="{bunkers}" 
			width="100%"
			selectedIndex="0"
			valueCommit="bunkerGridChange(event)"
			change="bunkerGridChange(event)" 
			rowCount="6" 
			headerHeight="50">
			<mx:columns>
				<mx:DataGridColumn dataField="bunker_id" width="40">
					<mx:headerRenderer>
						<mx:Component>
							<mx:VBox>
								<mx:Label text="ID" width="100%"/>
								<mx:TextInput 
									id="f_bunker_id"
									text="{outerDocument.fltr.bunker_id}"
									initialize="outerDocument.registerFilterField(f_bunker_id)"
									change="outerDocument.filter('bunker_id', f_bunker_id.text)"
									mouseUp="event.stopImmediatePropagation()"
									mouseDown="event.stopImmediatePropagation()"
									click="event.stopImmediatePropagation()"
									width="100%"/>
							</mx:VBox>
						</mx:Component>
					</mx:headerRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn dataField="nummer" width="64">
					<mx:headerRenderer>
						<mx:Component>
							<mx:VBox>
								<mx:Label text="Nummer" width="100%"/>
								<mx:TextInput 
									id="f_nummer"
									text="{outerDocument.fltr.nummer}"
									initialize="outerDocument.registerFilterField(f_nummer)"
									change="outerDocument.filter('nummer', f_nummer.text)"
									mouseUp="event.stopImmediatePropagation()"
									mouseDown="event.stopImmediatePropagation()"
									click="event.stopImmediatePropagation()"
									width="100%"/>
							</mx:VBox>
						</mx:Component>
					</mx:headerRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn dataField="type" width="128">
					<mx:headerRenderer>
						<mx:Component>
							<mx:VBox>
								<mx:Label text="Type" width="100%"/>
								<mx:TextInput 
									id="f_type"
									text="{outerDocument.fltr.type}"
									initialize="outerDocument.registerFilterField(f_type)"
									change="outerDocument.filter('type', f_type.text)"
									mouseUp="event.stopImmediatePropagation()"
									mouseDown="event.stopImmediatePropagation()"
									click="event.stopImmediatePropagation()"
									width="100%"/>
							</mx:VBox>
						</mx:Component>
					</mx:headerRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn dataField="gemeente">
					<mx:headerRenderer>
						<mx:Component>
							<mx:VBox>
								<mx:Label text="Gemeente" width="100%"/>
								<mx:TextInput 
									id="f_gemeente"
									text="{outerDocument.fltr.gemeente}"
									initialize="outerDocument.registerFilterField(f_gemeente)"
									change="outerDocument.filter('gemeente', f_gemeente.text)"
									mouseUp="event.stopImmediatePropagation()"
									mouseDown="event.stopImmediatePropagation()"
									click="event.stopImmediatePropagation()"
									width="100%"/>
							</mx:VBox>
						</mx:Component>
					</mx:headerRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn dataField="deelgemeente">
					<mx:headerRenderer>
						<mx:Component>
							<mx:VBox>
								<mx:Label text="Deelgemeente" width="100%"/>
								<mx:TextInput 
									id="f_deelgemeente"
									text="{outerDocument.fltr.deelgemeente}"
									initialize="outerDocument.registerFilterField(f_deelgemeente)"
									change="outerDocument.filter('deelgemeente', f_deelgemeente.text)"
									mouseUp="event.stopImmediatePropagation()"
									mouseDown="event.stopImmediatePropagation()"
									click="event.stopImmediatePropagation()"
									width="100%"/>
							</mx:VBox>
						</mx:Component>
					</mx:headerRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn dataField="straat">
					<mx:headerRenderer>
						<mx:Component>
							<mx:VBox>
								<mx:Label text="Straat" width="100%"/>
								<mx:TextInput 
									id="f_straat"
									text="{outerDocument.fltr.straat}"
									initialize="outerDocument.registerFilterField(f_straat)"
									change="outerDocument.filter('straat', f_straat.text)"
									mouseUp="event.stopImmediatePropagation()"
									mouseDown="event.stopImmediatePropagation()"
									click="event.stopImmediatePropagation()"
									width="100%"/>
							</mx:VBox>
						</mx:Component>
					</mx:headerRenderer>
				</mx:DataGridColumn>
			</mx:columns>
		</mx:DataGrid>
		
		<mx:HBox>
		
			<mx:Button 
				label="Voeg toe" 
				enabled="{user.access == 'read/write'}"
				click="click_voeg_toe(event)" />

			<mx:Button 
				label="Verwijder" 
				enabled="{user.access == 'read/write' &amp;&amp; bunkerGrid.selectedIndex >= 0}" 
				click="click_verwijder(event)"/>

		</mx:HBox>
		
		<mx:TabNavigator width="100%" height="400" creationPolicy="all">
			<bunkerFiche:Type id="type" label="Type" data="{_bunker}" />
			<bunkerFiche:Locatie id="locatie" label="Locatie" data="{_bunker}" />
			<bunkerFiche:Documenten id="documenten" label="Documenten" data="{_bunker}" />
			<bunkerFiche:Fotos id="fotos" label="Fotos" data="{_bunker}" />
			<bunkerFiche:Contacten id="contacten" label="Contacten" data="{_bunker}" />
			<bunkerFiche:Links id="links" label="Links" data="{_bunker}" />
			<bunkerFiche:Bescherming id="bescherming" label="Bescherming" data="{_bunker}" />
			<bunkerFiche:Opmerkingen id="opmerkingen" label="Opmerkingen" data="{_bunker}" />
		</mx:TabNavigator>

		<mx:Button 
			label="Bewaar" 
			enabled="{user.access == 'read/write'}"
			click="click_bewaar(event)"/>

	</mx:VBox>
	
</mx:Application>
